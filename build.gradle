buildscript {
    ext {
        kotlinVersion = '2.0.21'
        springBootVersion = '3.3.5'
        springKafkaVersion = '3.2.4'
        jacksonModuleKotlinVersion = '2.18.1'
        tokenSupportVersion = '5.0.11'
        pac4jVersion = '5.7.0'
        cxfVersion = '3.5.5'
    }
}

plugins {
    id "org.springframework.boot" version "$springBootVersion"
    id "io.spring.dependency-management" version "1.1.6"
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.spring" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
}

apply from: "buildSrc/ep-module.gradle"

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    systemProperty "file.encoding", "utf-8"

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

group = 'no.nav.eessi.pensjon'

dependencies {

    // Spring-boot BOM-fil spesifiserer versjoner for Spring Boot-avhengigheter
    implementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-websocket")
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude module: 'junit'
        exclude module: "mockito-core"
        exclude module: "junit-vintage-engine"
    }
    implementation("org.yaml:snakeyaml:2.3") // Pga https://security.snyk.io/package/maven/org.yaml:snakeyaml

    // Spring Framework BOM-fil overstyrer så vi får siste patch-versjon av Spring Framework
    implementation(platform("org.springframework:spring-framework-bom:6.2.0"))

    // Kafka
    implementation("org.springframework.kafka:spring-kafka:$springKafkaVersion")

    // Apache CXF
    implementation("org.apache.cxf:cxf-spring-boot-starter-jaxws:${cxfVersion}")
    implementation("org.apache.cxf:cxf-rt-ws-security:${cxfVersion}")


    // Kotlin
    implementation("com.fasterxml.jackson.core:jackson-core:${jacksonModuleKotlinVersion}")

    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    // Logging
    implementation("net.logstash.logback:logstash-logback-encoder:8.0")
    configurations { all*.exclude group: 'commons-logging', module: 'commons-logging' }
    implementation("org.slf4j:jcl-over-slf4j:2.0.16")

    //GCP
    implementation("com.google.cloud:google-cloud-storage:2.44.1")

    // Micrometer
    implementation("io.micrometer:micrometer-registry-prometheus:1.13.6")

    //ep-libs
    implementation("no.nav.eessi.pensjon:ep-logging:2.1.87")
    implementation("no.nav.eessi.pensjon:ep-metrics:2.0.89")
    implementation("no.nav.eessi.pensjon:ep-eux:2.3.37")

    //auth
    implementation("no.nav.security:token-client-spring:${tokenSupportVersion}")
    implementation("no.nav.security:token-validation-spring:${tokenSupportVersion}")
    implementation("no.nav.security:token-validation-jaxrs:${tokenSupportVersion}")
    implementation("no.nav.security:token-validation-test-support:2.0.5")

    testImplementation("org.junit.jupiter:junit-jupiter:5.11.2")

    //mock
    testImplementation("io.mockk:mockk:1.13.13")
    testImplementation('com.ninja-squad:springmockk:4.0.2')

    // Architecture tests
    testImplementation 'com.tngtech.archunit:archunit:1.3.0'

    // Kafka
    testImplementation "org.springframework.kafka:spring-kafka-test:$springKafkaVersion"

    // LDAP
    implementation("org.springframework.ldap:spring-ldap-core:3.2.8")
    implementation("org.springframework.security:spring-security-ldap:6.3.4")
    implementation("com.unboundid:unboundid-ldapsdk:7.0.1")

    // Test - token-validation-spring-test dependencies
    testImplementation("no.nav.security:token-validation-spring-test:$tokenSupportVersion")
}
