server:
  port: 8080

app.name: test2
app:
  name: TEST
  version: 0.1

eessi.pensjon.frontend:
  api.fss:
    url:  'http://localhost:8082'
    channel:
      queuemanager: 'http://somemanager:1234'
      name: 'somename'
  ui:
    url: 'someurl'

aktoerregister.api.v1.url: "someurl"

security-token-service-openid-configuration:
  url: "something"

euxbasis.v1:
  apiKey: "apikey"
  url:  'http://localhost:9090/cpi'

EUXBASIS_V1_URL: "someurl"

EessiPensjonFrontendApi_v1:
  url: "someurl"

eessifagmodulservice:
  apiKey: "apikey"
  url: 'http://localhost:8081'

rina:
  url: "'http://example.com:8087'"

no.nav.security.oidc.issuer.isso:
  discoveryurl: "http://metadata"
  acceptedaudience: "aud-localhost"
  cookiename: "localhost-idtoken"

s3_url: 'https://s3.nais.preprod.local'

spring.main.allow-bean-definition-overriding: true

eessi_pensjon_frontend_api_s3_creds_username: 'dummy'
eessi_pensjon_frontend_api_s3_creds_password: 'dummy'

eessi_pensjon_s3_crypto_password: "something"

eessi.pensjon.frontend.api:
  s3:
    whitelist.key.ending: 'whitelisted'
    bucket.name: 'eessipensjon'
    personidentifier.separator: '___'

srveessipensjon:
  username: "someuser"
  password: "somepass"

eessi.pensjon.whitelist.users:

APP_NAME: 'eessi-pensjon-saksbehandling-api'
FASIT_ENVIRONMENT_NAME: 'test'
#FASIT_ENVIRONMENT_NAME: 'SOMEENVIRONMENT'


isso.agent.password: 'somepass'
rina_host.url: 'someurl'
kafka.brokers.url: 'someurl'
NAV_DOMAIN_URL: 'somedomain'
VARSELPRODUKSJON.VARSLINGER.queuename: 'http://someurl:1245'
LOGINSERVICE_HOSTURL: 'http://someurl'

kafka:
  sedSendt:
    topic: eessi-basis-sedSendt-v1
    groupid: eessi-pensjon-group
  sedMottatt:
    topic: eessi-basis-sedMottatt-v1
    groupid: eessi-pensjon-group

#Spring
spring:
  jmx.enabled: false
  jackson:
    serialization:
      write_dates_as_timestamps: false
  kafka:
    listener:
      ack-mode: manual
    consumer:
      enable-auto-commit: false
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS_URL}
    properties:
      security.protocol: SASL_SSL
      value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicRecordNameStrategy
      key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      sasl:
        mechanism: PLAIN
        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${srvusername}" password="${srvpassword}";

